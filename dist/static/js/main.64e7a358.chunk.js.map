{"version":3,"sources":["../webpack/universalModuleDefinition","Search/Search.tsx","SidePanel/SidePanel.tsx","index.tsx"],"names":["root","factory","exports","module","define","amd","window","SearchHistoryLS","className","size","data","this","localStorage","getItem","JSON","parse","setItem","stringify","str","trim","remove","unshift","length","pop","filter","e","Search","dataManager","props","history","state","value","onCloseHandle","preventDefault","stopPropagation","onClose","setState","onSelect","add","onClickHandle","onChange","classNames","SearchLine","type","map","i","key","closable","onClick","historyRender","React","SidePanel","ref","DragCore","offset","componentDidMount","bindTrigger","trigger","document","querySelector","addEventListener","style","transform","draggable","onDragStart","onDrag","onDragEnd","onDragStop","onTouchStart","onTouchMove","onTouchEnd","onTouchStop","children","component","defaultOffset","transition","direction","pos","startPos","first","isVertical","scrollTop","dragging","addPos","SIZE","event","screenX","changedTouches","screenY","current","dataTransfer","setDragImage","image","Math","abs","diff","animmate","body","appendChild","createElement"],"mappings":"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","file":"static/js/main.64e7a358.chunk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hisgeomap-ui-react\"] = factory();\n\telse\n\t\troot[\"hisgeomap-ui-react\"] = factory();\n})(window, function() {\nreturn ","import * as React from \"react\";\nimport { AutoComplete, Tag } from \"antd\";\nimport \"./Search.css\";\nimport classNames from \"classnames\";\nimport { AutoCompleteProps } from \"antd/lib/auto-complete\";\n\nexport interface SearchProps extends AutoCompleteProps {\n    type?: \"line\" | \"block\";\n    history?: string;\n    historyRender?: Function;\n    onClose?: Function;\n}\n\ninterface SearchState {\n    history: string[];\n    value: string;\n}\n\nclass SearchHistoryLS {\n    size: number;\n    className?: string;\n    data: string[];\n\n    constructor(className?: string, size: number = 10) {\n        this.size = size;\n        this.className = className;\n        if (className) {\n            const data = localStorage.getItem(className);\n            if (!data) {\n                this.data = [];\n                localStorage.setItem(className, JSON.stringify(this.data));\n            } else {\n                this.data = JSON.parse(data);\n            }\n        } else {\n            this.data = [];\n        }\n    }\n\n    add(data: string) {\n        if (this.className) {\n            const str = data.trim();\n            this.remove(str);\n            this.data.unshift(str);\n            this.data.length > this.size && this.data.pop();\n            localStorage.setItem(this.className, JSON.stringify(this.data));\n        }\n    }\n\n    remove(data: string) {\n        this.data = this.data.filter(e => e !== data);\n    }\n}\n\nclass Search extends React.Component<SearchProps, SearchState> {\n    dataManager = new SearchHistoryLS(this.props.history);\n    state = {\n        history: this.dataManager.data,\n        value: \"\"\n    };\n\n    onCloseHandle = (value: string) => {\n        return (e: any) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this.dataManager.remove(value);\n            this.props.onClose && this.props.onClose(e);\n            this.setState({ ...this.state, history: this.dataManager.data });\n        };\n    };\n\n    onSelect = (value: any) => {\n        this.dataManager.add(value);\n        this.props.onSelect && this.props.onSelect(value, {});\n        this.setState({ ...this.state, history: this.dataManager.data, value });\n    };\n\n    onClickHandle = (value: string) => {\n        return (e: any) => {\n            this.onSelect(value);\n        };\n    };\n\n    onChange = (value: any) => {\n        this.setState({ ...this.state, value });\n        this.props.onChange && this.props.onChange(value);\n    };\n\n    public render() {\n        return (\n            <div className={classNames(\"Search\", this.props.className)}>\n                <AutoComplete\n                    {...this.props}\n                    onSelect={this.onSelect}\n                    value={this.state.value}\n                    onChange={this.onChange}\n                    className={classNames(\"SearchInput\", {\n                        SearchLine: this.props.type === \"line\"\n                    })}\n                />\n\n                <div className=\"SearchHistory\">\n                    {this.state.history.map((e, i) => (\n                        <Tag\n                            className=\"SearchHistory-tag\"\n                            key={e + i}\n                            closable\n                            onClick={this.onClickHandle(e)}\n                            onClose={this.onCloseHandle(e)}\n                        >\n                            {this.props.historyRender\n                                ? this.props.historyRender(e)\n                                : e}\n                        </Tag>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\nexport default Search;\n","import * as React from \"react\";\nimport \"./SidePanel.css\";\nimport classNames from \"classnames\";\nexport interface SidePanelProps {\n    offset: string;\n    trigger?: string;\n    className?: string;\n}\nclass SidePanel extends React.Component<SidePanelProps, any> {\n    ref: React.RefObject<any> = React.createRef();\n    DragCore = new DragCore(this.ref, this.props.offset);\n    public render() {\n        return (\n            <div\n                className={classNames(\"SidePanel\", this.props.className)}\n                style={{\n                    transform: `translateX(${this.props.offset}) translate(0,0)`\n                }}\n                ref={this.ref}\n                draggable\n                onDragStart={this.DragCore.onDragStart}\n                onDrag={this.DragCore.onDrag}\n                onDragEnd={this.DragCore.onDragStop}\n                onTouchStart={this.DragCore.onTouchStart}\n                onTouchMove={this.DragCore.onTouchMove}\n                onTouchEnd={this.DragCore.onTouchStop}\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n\n    public componentDidMount = () => {\n        this.bindTrigger();\n    };\n\n    bindTrigger = () => {\n        if (this.props.trigger) {\n            const trigger = document.querySelector(this.props.trigger);\n            if (trigger) {\n                trigger.addEventListener(\"click\", this.DragCore.trigger);\n            }\n        }\n    };\n}\n\nclass DragCore {\n    static image: Element = document.body.appendChild(\n        document.createElement(\"div\")\n    );\n\n    static SIZE = 3;\n    component: React.RefObject<any>;\n    offset: string;\n    defaultOffset: string;\n    transition: string = \"0.3s transform ease-in-out\";\n    direction: boolean = false;\n\n    // dragging\n    pos: number[][] = [];\n    startPos?: number[];\n\n    // adaptation for scroll functionality\n    first: boolean = true;\n    isVertical: boolean = false;\n    scrollTop: number = 0;\n\n    // adaptation for inside drag component\n    dragging: boolean = false;\n\n    constructor(ref: React.RefObject<any>, offset: string) {\n        this.component = ref;\n        this.defaultOffset = offset.trim();\n        this.offset = this.defaultOffset;\n    }\n\n    addPos = (pos: number[]) => {\n        this.pos.unshift(pos);\n        if (this.pos.length > DragCore.SIZE) {\n            this.pos.pop();\n        }\n    };\n\n    onTouchStart = (event: any) => {\n        event.screenX = event.changedTouches[0].screenX;\n        event.screenY = event.changedTouches[0].screenY;\n        this.onDragStart(event);\n    };\n\n    onTouchMove = (event: any) => {\n        event.screenX = event.changedTouches[0].screenX;\n        event.screenY = event.changedTouches[0].screenY;\n        this.onDrag(event);\n    };\n\n    onTouchStop = (event: any) => {\n        this.onDragStop(event);\n    };\n\n    onDragStart = (event: any) => {\n        const component = this.component.current;\n        const pos = [event.screenX, event.screenY];\n        this.pos = [];\n        this.startPos = pos;\n        this.addPos(pos);\n        this.first = true;\n        this.dragging = true;\n        if (event.dataTransfer) {\n            event.dataTransfer.setDragImage(DragCore.image, 0, 0);\n        }\n        if (component) {\n            this.scrollTop = component.scrollTop;\n            component.style.transition = \"none\";\n        }\n    };\n\n    onDrag = (event: any) => {\n        const pos = [event.screenX, event.screenY];\n        const component = this.component.current;\n\n        if (this.dragging && pos[0] !== 0 && component && this.startPos) {\n            if (this.first) {\n                this.isVertical =\n                    Math.abs(this.pos[0][1] - pos[1]) -\n                        Math.abs(this.pos[0][0] - pos[0]) >=\n                    0;\n                this.first = false;\n            }\n\n            if (!this.isVertical) {\n                const diff = pos[0] - this.startPos[0];\n                const direction = pos[0] - this.pos[0][0];\n                this.direction =\n                    direction === 0 ? this.direction : direction > 0;\n                this.addPos(pos);\n                component.style.transform = `translateX(${this.offset}) translate(${diff}px,0)`;\n                component.scrollTop = this.scrollTop;\n            }\n        }\n    };\n\n    onDragStop = (event: any) => {\n        const component = this.component.current;\n        this.dragging = false;\n        if (!this.direction && component) {\n            this.offset = this.defaultOffset;\n        } else {\n            this.offset = \"0\";\n        }\n\n        if (!this.isVertical) {\n            component.scrollTop = this.scrollTop;\n            component.style.transform = `translateX(${this.offset}) translate(0,0)`;\n            component.style.transition = this.transition;\n        }\n    };\n\n    trigger = () => {\n        this.direction = !this.direction;\n        this.onDragStop(null);\n    };\n\n    animmate = () => {};\n}\n\nexport default SidePanel;\n","import \"antd/dist/antd.css\";\nexport { default as Search } from \"./Search\";\nexport { default as SidePanel } from \"./SidePanel\";\n"],"sourceRoot":""}